<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="maxpro11" ignored="4" name="Test" tests="6" failures="0" timestamp="21 Dec 2017 07:53:36 GMT" time="2.051" errors="0">
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="wrappers.LeafTapsWrappers">
    <failure type="java.lang.RuntimeException" message="FAILED">
      <![CDATA[java.lang.RuntimeException: FAILED
	at utils.Reporter.reportStep(Reporter.java:33)
	at utils.Reporter.reportStep(Reporter.java:43)
	at wrappers.GenericWrappers.invokeApp(GenericWrappers.java:118)
	at wrappers.GenericWrappers.invokeApp(GenericWrappers.java:79)
	at wrappers.LeafTapsWrappers.beforeMethod(LeafTapsWrappers.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:590)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="wrappers.LeafTapsWrappers">
    <failure type="java.lang.RuntimeException" message="FAILED">
      <![CDATA[java.lang.RuntimeException: FAILED
	at utils.Reporter.reportStep(Reporter.java:33)
	at utils.Reporter.reportStep(Reporter.java:43)
	at wrappers.GenericWrappers.invokeApp(GenericWrappers.java:118)
	at wrappers.GenericWrappers.invokeApp(GenericWrappers.java:79)
	at wrappers.LeafTapsWrappers.beforeMethod(LeafTapsWrappers.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:590)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="wrappers.LeafTapsWrappers">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="wrappers.LeafTapsWrappers">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="wrappers.LeafTapsWrappers">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="wrappers.LeafTapsWrappers">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="wrappers.LeafTapsWrappers">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="wrappers.LeafTapsWrappers">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="wrappers.LeafTapsWrappers">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="wrappers.LeafTapsWrappers">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="wrappers.LeafTapsWrappers">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="wrappers.LeafTapsWrappers">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="wrappers.LeafTapsWrappers">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="loginLogOut" time="0.001" classname="testcases.TC001_Loginnegative">
    <skipped/>
  </testcase> <!-- loginLogOut -->
  <testcase name="loginLogOut" time="0.001" classname="testcases.TC001_Loginnegative">
    <skipped/>
  </testcase> <!-- loginLogOut -->
  <testcase name="loginLogOut" time="0.001" classname="testcases.TC001_Loginnegative">
    <skipped/>
  </testcase> <!-- loginLogOut -->
  <testcase name="loginLogOut" time="0.006" classname="testcases.TC001_Loginnegative">
    <skipped/>
  </testcase> <!-- loginLogOut -->
  <testcase name="loginLogOut" time="0.001" classname="testcases.TC001_LoginLogOut">
    <skipped/>
  </testcase> <!-- loginLogOut -->
  <testcase name="loginLogOut" time="0.001" classname="testcases.TC001_LoginLogOut">
    <skipped/>
  </testcase> <!-- loginLogOut -->
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="wrappers.LeafTapsWrappers">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@AfterSuite afterSuite" time="0.0" classname="wrappers.LeafTapsWrappers">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="wrappers.LeafTapsWrappers">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="wrappers.LeafTapsWrappers">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
</testsuite> <!-- Test -->
